name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin, windows, linux]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: amd64
          GO_VERSION: 1.19
          APP_NAME: hey-jude
        run: |
          go build -o $APP_NAME-${GOOS}-${GOARCH} -v ./...

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hey-jude-${{ matrix.goos }}-amd64
          asset_name: hey-jude-${{ matrix.goos }}-amd64
          asset_content_type: application/octet-stream
